
//////////////////////////////////////////////////////////////////////////////////////////////////
//			ImageJ script written by Leon Obendorf 					                                        //
//	    Purpose: 										                                                            //
//		          Perform quantification of caveolin-1 positive circular structures 	           	//
//		                     within confocal or immunofluorescence images.			 		              //
//										 		                                                                      //
// 	Additionally it allows to measure the intensity of a different fluorescent 	 	              //
//	channel within the components. 						 		                                              //
//	In this study the intensity of a fluorescent AB against Endoglin was measured.		          // 
//	Thethreshhold to calculate the number of caveolin-1 stuctures that are positive 	          //
//	for the second channel (Endoglin, ALK1, EEA1,...) was performed seperately in R.          	//
//												                                                                      //
//	The structures were counted as "positive" if the integrated intensity ratio		              //
//	within the area of the caveolin-1 structure was more than 15% above the mean of 	          //
//	the fluorescence intensity in the whole image						                                    //
//												                                                                      //
// 		     Import this script in ImageJ, adjust and simply run it. 			                        //
//////////////////////////////////////////////////////////////////////////////////////////////////


// Choose a directory containing subdirectories. In each subdirectory the confocal images are located split into different channels:
//
// DIRECTORY 
//	|----------- Sub-directory-Image01
//	|		|----------Image01_ch01.tif
//	|		|----------Image01_ch02.tif
//	|		|----------Image01_ch03.tif
//	|		|----------Image01_ch04.tif
//	|		
//	|----------- Subdirectory-Image02
//	|		|----------Image02_ch01.tif
//	|		....
//	.....		
// 
// If all color channels are stored within one Image, adjust the following section to fit your data-structure


// Iterate over each subfolder an analyze the images
inputDir = getDirectory("choose the input directory");
list = getFileList(inputDir);
var bool = 0;
for (i=0; i<list.length; i++) {

	folder= inputDir + list[i];
	
	ImgList = getFileList(folder);
	
	 for (e=0; e<ImgList.length; e++) {
    	file = folder + ImgList[e];
		m=".tif"; 
		a=0;
		mIndex = indexOf(file,m); 
		if (mIndex > 0) {
			open(file);
			bool=1;
		}
		mIndex=0;
	} 
	
	
	if (bool==1) {
	analyzeImage();
	}
	
	
	bool=0;

}


function analyzeImage(){ 
	ImgName=getTitle();
	// Set the variable to discriminate the channels by the naming of the images (e.g. ...ch01.tif, ...ch02.tif)
	u="ch"; 
	a=0;
	uIndex = indexOf(ImgName,u); 
	if (uIndex<0) exit("Error: Directory name does not contain "+u); 
	a=substring (ImgName,uIndex); 
	b=substring(ImgName, 0, uIndex);
	print(b);


	// get the number cells within one image via counting nuclei and deleting these ROIs afterwards.
	 selectWindow(b + "ch00.tif");
	 run("Convert to Mask");
	 run("Dilate"); 
	 run("Fill Holes"); 
	 run("Analyze Particles...", "size=30.00-Infinity exclude add in_situ");
	 nROIs = roiManager("count");
	 print("\\Clear");

	 print(nROIs);
	 roiManager("deselect");
	 roiManager("delete");

	// select channel of caveolin-1 to find all ring-like-structures 
	// adjust to your specific channel that contains the fluorescence of the circular particles.
	   selectWindow(b + "ch03.tif");

	run("Subtract Background...", "rolling=4");

	// Autotreshhold "Minimum dark no-reset" does not work for all kind of images 
	// setAutoThreshold("Minimum dark no-reset");
	// -> eventually set threshhold manually so that rings are still visible but barely more. 
	setThreshold(70, 255);


	setOption("BlackBackground", true);
	run("Convert to Mask");
	// run("Watershed");
	// depending on how your resolution is and in which scaling the images are loaded (pixel or nanometer) adjust the size for "analyze particles" 
	run("Analyze Particles...", "size=0.5-4.00 exclude add in_situ circularity=0.5-1.00");
	nROIs = roiManager("count");
	print(nROIs);

	roiManager("deselect");
	roiManager("Save", "/PATH/TO/ROIs/Output" + "Cavs" + ".zip");
	roiManager("deselect");
	roiManager("delete");

	// start analyzing EEAs
	// here same as above, make sure the size is of counted compartments is adjusted until it visually makes sense and includes all vesicles. 
	//Keep these settings for all replicas and conditions 
	selectWindow(b + "ch01.tif");
	run("Subtract Background...", "rolling=15");
	setAutoThreshold("Minimum dark no-reset");
	setOption("BlackBackground", true);
	run("Convert to Mask");
	run("Analyze Particles...", "size=0.1-4.00 exclude add in_situ");
	nROIs = roiManager("count");
	print(nROIs);
	
	roiManager("deselect");
	// save EEA regions of interest
	roiManager("Save", "/PATH/TO/ROIs/Output" + "EEAs" + ".zip");
	roiManager("deselect");
	roiManager("delete");


selectWindow(b + "ch01.tif");
//open EEAs, mark the area of EEA-vesicles by drawing and then measure inside the caveolin vesicles if EEA-vesicles overlap / are similar.
open("/PATH/TO/ROIs/Output/EEAs.zip");
roiManager("draw");
roiManager("fill");
roiManager("deselect");
roiManager("delete");
open("/PATH/TO/ROIs/Output/Cavs.zip");
roiManager("deselect");
roiManager("measure");
if (isOpen("Results")) { 
       	selectWindow("Results");
   	   	dir=getDirectory("image");
   	   	name = "VESICLES.txt"; // can change to xls, csv, etc.
       		saveAs("results", dir+name); 
  
	}
run("Clear Results"); 

	// Endoglin measurement is performed here on the whole image, this does only work for confluent cells, otherwise measure this number independently from 
	selectWindow(b + "ch02.tif");
	run("Subtract Background...", "rolling=50");
	run("Subtract Background...", "rolling=20");
	getValue("Mean")
	run("Clear Results"); 
	roiManager("deselect");
	roiManager("measure");

	//save results of measurement for each caveolin-vesicle
	if (isOpen("Results")) { 
       		selectWindow("Results");
       		roiManager("Select", 0);
   	   	dir=getDirectory("image");
   	   	name ="ENG.txt"; // can change to xls, csv, etc.
       		saveAs("results", dir+name); 
  
	}
roiManager("deselect");
roiManager("delete");

	//save 3 extra values: number of nuclei, number of Caveolin-1-positive rings and mean intensity of Endoglin / ALK1 / ... within the whole image
	selectWindow("Log");  
	name = "Test" +  b +".txt"; //can change to xls, csv, etc.
	saveAs("results", dir+name); 
	saveAs("Text", dir+name); 

	//clear ROI manager, results, log and close all open windows:
	print("\\Clear");
	run("Clear Results"); 

	selectWindow(b+ "ch01.tif");
	close();

	selectWindow(b+ "ch03.tif");
	close();
	selectWindow(b+ "ch00.tif");
	close();
	selectWindow(b+ "ch02.tif");
	close();
	//run("Clear Results");
	
}
